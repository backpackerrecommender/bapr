@model Bapr.Models.UserPreference

@{
    ViewBag.Title = "User Preferences";
}

<h2>User Preferences</h2>
<p>@ViewBag.result </p>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true)
        <div class="form-group">
            @Html.LabelFor(model => model.MaxBudget, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaxBudget, additionalViewData: new { htmlAttributes = new { min = 1, max = long.MaxValue, Value = "100" } })
                @Html.ValidationMessageFor(model => model.MaxBudget)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NoOfDays, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NoOfDays, additionalViewData: new { htmlAttributes = new { min = 1, max = Int32.MaxValue, Value = "3" } })
                @Html.ValidationMessageFor(model => model.NoOfDays)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NeedMedicalSupport, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NeedMedicalSupport)
                @Html.ValidationMessageFor(model => model.NeedMedicalSupport)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Interests, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxListFor(x=>x.SelectedInterests, x=>x.Interests, x=>x.Name, x=>x.Name, x=>x.Checked, MvcCheckBoxList.Model.Position.Vertical)
                @*@for (int i = 0; i < Model.Interests.Count; i++)
                {
                    <div>
                        @Html.DisplayFor(x => x.Interests.ElementAt(i).Name, new { })
                        @Html.CheckBoxFor(x => x.Interests.ElementAt(i).Checked)
                        @Html.LabelFor(x => x.Interests.ElementAt(i).Checked, Model.Interests.ElementAt(i).Name)
                    </div>
                }*@
                @*@for (int i = 0; i < Model.Interests.Count; i++)
                    {
                        <div>
                            @Html.HiddenFor(x => x.Interests.ElementAt(i).Name)
                            @Html.CheckBoxFor(x => x.Interests.ElementAt(i).Checked)
                            @Html.LabelFor(x => x.Interests.ElementAt(i).Checked, Model.Interests.ElementAt(i).Name)
                        </div>
                    }*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cuisine, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxListFor(x => x.SelectedCuisine, x => x.Interests, x => x.Name, x => x.Name, x => x.Checked, MvcCheckBoxList.Model.Position.Vertical)

                @*@for (int i = 0; i < Model.Cuisine.Count; i++)
                {
                    <div>
                        @Html.HiddenFor(x => x.Cuisine.ElementAt(i).Name)
                        @Html.CheckBoxFor(x => x.Cuisine.ElementAt(i).Checked)
                        @Html.LabelFor(x => x.Cuisine.ElementAt(i).Checked, Model.Cuisine.ElementAt(i).Name)
                    </div>
                }*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save Preferences" class="btn btn-default" />
            </div>
        </div>
    </div>
}